/*
*   EuroCarbDB, a framework for carbohydrate bioinformatics
*
*   Copyright (c) 2006-2009, Eurocarb project, or third-party contributors as
*   indicated by the @author tags or express copyright attribution
*   statements applied by the authors.  
*
*   This copyrighted material is made available to anyone wishing to use, modify,
*   copy, or redistribute it subject to the terms and conditions of the GNU
*   Lesser General Public License, as published by the Free Software Foundation.
*   A copy of this license accompanies this distribution in the file LICENSE.txt.
*
*   This program is distributed in the hope that it will be useful,
*   but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
*   or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
*   for more details.
*
*   Last commit: $Rev$ by $Author$ on $Date::             $  
*/

package org.eurocarbdb.application.glycanbuilder.util;

import java.awt.event.ActionListener;
import java.util.LinkedList;

import javax.swing.*;

import org.eurocarbdb.application.glycanbuilder.CustomFocusTraversalPolicy;
import org.eurocarbdb.application.glycanbuilder.converter.GlycanParserFactory;

/**
   Dialog to specify a structure in a string format with a specified
   encoding. The supported encoding are specified by {@link
   GlycanParserFactory#getImportFormats}

   @author Alessio Ceroni (a.ceroni@imperial.ac.uk)
*/

public class ImportStructureDialog extends EscapeDialog implements ActionListener {

	private ActionManager theActionManager;
	
	/** Creates new dialog */
	public ImportStructureDialog(java.awt.Frame parent, ActionManager _a_ActionManager) {
		super(parent, true);

		this.theActionManager = _a_ActionManager;
		
		initComponents();
		fillComponents();
		setSelections();
		setTraversal();
		setActions();
		enableItems();

		// set location
		setLocationRelativeTo(parent);
	}

	private void fillComponents() {
		field_string_encoded.setText("");

		java.util.Map<String,String> formats = GlycanParserFactory.getImportFormats(true);
		field_string_format.setModel(new DefaultComboBoxModel(formats.keySet().toArray()));
	}
	
	private void setSelections() {
	}

		private void setTraversal() {
		CustomFocusTraversalPolicy tp = new CustomFocusTraversalPolicy();

		tp.addComponent(field_string_format);
		tp.addComponent(field_string_encoded);

		tp.addComponent(button_ok);
		tp.addComponent(button_cancel);
		tp.addComponent(button_paste);
		tp.addComponent(button_delete);

		this.setFocusTraversalPolicy(tp);

		getRootPane().setDefaultButton(button_ok);
	}

	private void setActions() {
		button_ok.addActionListener(this);
		button_cancel.addActionListener(this);
		button_paste.addActionListener(this);
		button_delete.addActionListener(this);
	}

	private void enableItems() {
	}

	/**
       Return <code>true</code> if the cancel button was pressed
	 */
	public boolean isCanceled() {
		return return_status.equals("Cancel");
	}

	/**
       Return a string representing a structure encoded in the
       selected format
	 */
	public LinkedList<String> getStringEncoded() {
		LinkedList<String> ret = new LinkedList<String>();
		if(!this.getStringFormat().contains("glycoct")) 
			for(String s : this.field_string_encoded.getText().split("\n")) ret.addLast(s);
		else
			ret.addLast(this.field_string_encoded.getText());
		return ret;		
	}

	/**
       Return the format in which the structure was encoded
	 */
	public String getStringFormat() {
		return (String)field_string_format.getSelectedItem();
	}

	public void actionPerformed(java.awt.event.ActionEvent e) {
		String action = e.getActionCommand();

		if (action == "Import") {
			return_status = "OK";
			closeDialog();
		}else if (action == "Cancel"){
			return_status = "Cancel";
			closeDialog();
		}else if(action.equals("cut") )
			cut();
		else if( action.equals("copy") )
			copy();
		else if( action.equals("Paste") )
			paste();
		else if( action.equals("Delete") )
			delete();
	}        

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		field_string_encoded = new javax.swing.JTextArea();
		button_ok = new javax.swing.JButton();
		button_cancel = new javax.swing.JButton();
		button_paste = new JButton();
		button_delete = new JButton();
		field_string_format = new javax.swing.JComboBox();

		addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent evt) {
				closeDialog();
			}
		});

		jLabel1.setText("Import sequence format");

		field_string_encoded.setColumns(20);
		field_string_encoded.setRows(10);
		jScrollPane1.setViewportView(field_string_encoded);

		button_ok.setText("Import");
		button_cancel.setText("Cancel");
		button_paste.setText("Paste");
		button_delete.setText("Delete");
		
		field_string_format.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "glycominds" }));
		
		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this.getContentPane());
		this.getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout.createSequentialGroup()
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
								.add(layout.createSequentialGroup()
										.addContainerGap()
										.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
												.add(layout.createSequentialGroup()
														.add(jLabel1)
														.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 100, Short.MAX_VALUE)
														.add(field_string_format, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
														.add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)))
														.add(layout.createSequentialGroup()
																.add(12, 12, 12)
																.add(button_ok)
																.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
																.add(button_cancel)
																.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
																.add(button_paste)
																.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
																.add(button_delete)))
																.addContainerGap())
				);

		layout.linkSize(new java.awt.Component[] {button_cancel, button_ok, button_paste, button_delete}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

		layout.setVerticalGroup(
				layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
				.add(layout.createSequentialGroup()
						.addContainerGap()
						.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
								.add(jLabel1)
								.add(field_string_format, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
								.add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
								.add(17, 17, 17)
								.add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
										.add(button_cancel)
										.add(button_ok)
										.add(button_paste)
										.add(button_delete))
										.addContainerGap())
				);
		
		pack();
	}// </editor-fold>//GEN-END:initComponents

	public void cut() {    
		field_string_encoded.cut();
	}

	public void copy() {
		field_string_encoded.copy();    
	}

	public void delete() {    
		field_string_encoded.setText("");
	}

	public void paste() {
		field_string_encoded.paste();
	}
	
	/** Closes the dialog */
	private void closeDialog() {//GEN-FIRST:event_closeDialog
		setVisible(false);
		dispose();
	}//GEN-LAST:event_closeDialog


	// Variables declaration - do not modify//GEN-BEGIN:variables
	private JButton button_cancel;
	private JButton button_ok;
	private JButton button_paste;
	private JButton button_delete;
	private JTextArea field_string_encoded;
	private JComboBox field_string_format;
	private JLabel jLabel1;
	private JScrollPane jScrollPane1;
	// End of variables declaration//GEN-END:variables

}
